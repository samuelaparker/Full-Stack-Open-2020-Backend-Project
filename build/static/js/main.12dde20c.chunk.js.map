{"version":3,"sources":["services/persons.js","components/Notification.js","components/ErrorMessage.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","ErrorMessage","Filter","props","value","filterInput","onChange","handleFilterInput","PersonForm","onSubmit","addPerson","newName","handleNameInput","newNumber","handleNumberInput","type","Person","name","number","onClick","deletePerson","App","useState","persons","setPersons","setNewName","setNumber","setFilterInput","notificationMessage","setNotificationMessage","errorMessage","setErrorMessage","filteredPeople","map","n","filter","toLocaleLowerCase","includes","useEffect","personService","event","target","preventDefault","find","p","setTimeout","personByName","personByNumber","window","confirm","updatedPerson","catch","error","checkUpdateExistingNumber","newPerson","concat","person","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.12dde20c.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject) \n    return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nconst deleteResource = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n}\n\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getAll, create, update, deleteResource  }\n\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n    return (\n        <div className=\"notification\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import React from 'react'\n\nconst ErrorMessage = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n    return (\n        <div className=\"error_message\">\n            {message}\n        </div>\n    )\n}\n\nexport default ErrorMessage","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\nimport ErrorMessage from './components/ErrorMessage'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNumber] = useState('')\n  const [filterInput, setFilterInput] = useState('')\n  const [notificationMessage, setNotificationMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n  const filteredPeople = persons.map(n => n).filter(n => n.name.toLocaleLowerCase().includes(filterInput.toLocaleLowerCase()))\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response)\n      })\n  }, [])\n\n  const checkInput = () => {\n    if (!newName) {\n      setTimeout(() => {\n        setErrorMessage(`name required`)\n      }, 3000)\n      return false\n    }\n    if (!newNumber) {\n      setTimeout(() => {\n        setErrorMessage(`number required`)\n      }, 3000)\n      return false\n    }\n    if (persons.find(p => p.name === newName && p.number === newNumber)) {\n      setTimeout(() => {\n        setErrorMessage(\n          `${newName} with number ${newNumber} is already in the phonebook.`\n        );\n      }, 3000)\n      return false\n    }\n    return true\n  }\n  const checkUpdateExistingNumber = () => {\n    const personByName = persons.find(p => p.name === newName);\n    const personByNumber = persons.find(p => p.number === newNumber);\n    if (personByName && personByNumber) {\n      setErrorMessage(\n        `There is already a person with name ${newName} (number ${personByName.number}) and there is already number ${newNumber} (belonging to ${personByNumber.name})`\n      );\n      return true;\n    }\n    if (!personByName && !personByNumber) {\n      return false;\n    }\n    if (\n      personByName &&\n      !window.confirm(\n        `Name ${newName} is already in the phonebook.\\nDo you want to update the number to ${newNumber}?`\n      )\n    ) {\n      return false;\n    }\n    if (\n      personByNumber &&\n      !window.confirm(\n        `Number ${newNumber} is already in the phonebook.\\nDo you want to update the name to ${newName}?`\n      )\n    ) {\n      return false;\n    }\n    const p = personByName || personByNumber;\n    const id = p.id;\n    personService\n      .update(id, { ...p, name: newName, number: newNumber })\n      .then(updatedPerson => {\n        setPersons(persons.map(p => (p.id !== id ? p : updatedPerson)));\n        setNewName(\"\");\n        setNumber(\"\");\n        setTimeout(() => {\n          setNotificationMessage(`Updated ${p.name}'s number`);\n        }, 3000)\n      })\n      .catch(error => {\n        if (setErrorMessage(error, p.name, id)) {\n          setNewName(\"\");\n          setNumber(\"\");\n        } else {\n          setTimeout(() => {\n            setErrorMessage(\n              `Failed to update ${p.name}'s number on the server. ${`${error.response.data.message}`}`\n            );\n          }, 3000)\n        }\n      });\n    return true;\n  };\n\n  const addPerson = event => {\n    event.preventDefault();\n    if (!checkInput()) {\n      return;\n    }\n    if (checkUpdateExistingNumber()) {\n      return;\n    }\n    const newPerson = { name: newName, number: newNumber };\n    personService\n      .create(newPerson)\n      .then(newPerson => {\n       setNotificationMessage(`Added ${newPerson.name}`);\n        setTimeout(() => {\n                  setNotificationMessage(null)\n                }, 3000)\n        setPersons(persons.concat(newPerson));\n        setNewName(\"\");\n        setNumber(\"\");\n      })\n      .catch(error => {\n        setTimeout(() => {\n          setErrorMessage(`Failed to add ${newPerson.name}. ${`${error.response.data.message}`}`);\n        }, 3000)\n      });\n  };\n\n\n  // const addPerson = (event) => {\n  //   event.preventDefault()\n  //   const personObject = {\n  //     name: newName,\n  //     number: newNumber,\n  //     id: persons.length + 1,\n  //   }\n  //   if (persons.some(n => n.name.toLocaleLowerCase() === newName.trim().toLocaleLowerCase()) || persons.some(n => n.number === newNumber)) {\n  //     window.confirm(`${newName} is already added to the phonebook would you like to update the number?`)\n  //     const contact = persons.find(n => n.name.toLocaleLowerCase() === newName.trim().toLocaleLowerCase())\n  //     const changedContact = { ...contact, number: newNumber }\n  //     personService\n  //       .update(changedContact.id, changedContact)\n  //       .then(returnedContact => {\n  //         setPersons(persons.map(person => (person.id !== changedContact.id ? person : returnedContact)))\n  //         setNotificationMessage(`Updated ${contact.name}`)\n  //         // setTimeout(() => {\n  //         //   setNotificationMessage(null)\n  //         // }, 3000)\n  //         setNewName('')\n  //         setNumber('')\n  //       })\n  //       .catch(error => {\n  //         setErrorMessage(`Contact of ${contact.name} already removed from server`)\n  //         setTimeout(() => {\n  //           setErrorMessage(null)\n  //         }, 3000)\n  //       })\n  //   } else {\n  //     personService\n  //       .create(personObject)\n  //       .then(response => {\n  //         setPersons(persons.concat(response))\n  //         setNotificationMessage(`Added ${personObject.name}`)\n  //         setTimeout(() => {\n  //           setNotificationMessage(null)\n  //         }, 3000)\n  //         setNewName('')\n  //         setNumber('')\n  //         console.log(personObject)\n  //       })\n  //       .catch(error => {\n  //         setErrorMessage(`${error.response.data.message}`)\n  //         console.log(error.response.data)\n  //         setTimeout(() => {\n  //           setErrorMessage(null)\n  //         }, 7000)\n  //       })\n\n  //   }\n\n  // if (persons.some(n => n.name.toLocaleLowerCase() === newName.trim().toLocaleLowerCase()) || persons.some(n => n.number === newNumber)) {\n  //   window.confirm(`${newName} is already added to the phonebook would you like to update the number?`)\n  //   const contact = persons.find(n => n.name.toLocaleLowerCase() === newName.trim().toLocaleLowerCase())\n  //   const changedContact = { ...contact, number: newNumber }\n  //   personService\n  //     \n  // }\n\n  // else {\n  //   personService\n  //     .create(personObject)\n  //     .then(response => {\n  //       setPersons(persons.concat(response))\n  //       setNotificationMessage(`Added ${personObject.name}`)\n  //       setTimeout(() => {\n  //         setNotificationMessage(null)\n  //       }, 3000)\n  //       setNewName('')\n  //       setNumber('')\n  //       console.log(personObject)\n  //     })\n  //     // .catch(error => { \n  //     //   setErrorMessage(`${error.response.data}`)\n  //     //   console.log(error.response.data)\n  //     //   setTimeout(() => {\n  //     //     setErrorMessage(null)\n  //     //   }, 3000)\n  //     // })\n\n  // }\n  // }\n  // \n\n\n  const handleNameInput = (event) => {\n    setNewName(event.target.value)\n  }\n  const handleNumberInput = (event) => {\n    setNumber(event.target.value)\n  }\n\n  const handleFilterInput = (event) => {\n    setFilterInput(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n    let person = persons.find(n => n.id === id)\n    console.log(id)\n    if (window.confirm(`Are you sure you want to delete ${person.name}?`)) {\n      personService\n        .deleteResource(id)\n        .then(() => {\n          setPersons(persons.filter(n => n.id !== id))\n          setNotificationMessage(`Deleted ${person.name}`)\n          setTimeout(() => {\n            setNotificationMessage(null)\n          }, 3000)\n          console.log(persons)\n        })\n        .catch(error => {\n          console.log(error)\n        })\n    }\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={notificationMessage} />\n      <ErrorMessage message={errorMessage} />\n      <Filter\n        filterInput={filterInput}\n        handleFilterInput={handleFilterInput}\n      />\n      <h2>add a new</h2>\n      <PersonForm\n        persons={persons}\n        newName={newName}\n        newNumber={newNumber}\n        addPerson={addPerson}\n        handleNameInput={handleNameInput}\n        handleNumberInput={handleNumberInput}\n      />\n      <div>\n        <h3>Numbers:</h3>\n        {filteredPeople.map((person) =>\n          <Person\n            key={person.id}\n            name={person.name}\n            number={person.number}\n            deletePerson={() => deletePerson(person.id)}\n          />\n        )}\n      </div>\n    </div>\n  )\n}\n\nconst Filter = (props) => {\n\n  return (\n    <div>\n      filter shown with:\n      <input\n        value={props.filterInput}\n        onChange={props.handleFilterInput}\n      />\n    </div>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.addPerson} >\n        <div>\n          name: <input\n            value={props.newName}\n            onChange={props.handleNameInput}\n          />\n        </div>\n        <div>\n          number: <input\n            value={props.newNumber}\n            onChange={props.handleNumberInput}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n    </div>\n  )\n\n}\n\nconst Person = (props) => {\n  return (\n    <div>\n      <div>\n        {props.name} {props.number}\n        <button onClick={props.deletePerson}>Delete</button>\n      </div>\n    </div>\n\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}